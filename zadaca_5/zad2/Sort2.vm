function Sort2.partition 4
push argument 0
push argument 2
call Vint.get 2
pop local 0
push argument 1
push constant 1
sub
pop local 1
push argument 1
pop local 2
label WHILE_EXP0
push local 2
push argument 2
lt
not
if-goto WHILE_END0
push argument 0
push local 2
call Vint.get 2
push local 0
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
add
pop local 1
push argument 0
push local 1
call Vint.get 2
pop local 3
push argument 0
push local 1
push argument 0
push local 2
call Vint.get 2
call Vint.set 3
pop temp 0
push argument 0
push local 2
push local 3
call Vint.set 3
pop temp 0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push argument 0
push local 1
push constant 1
add
call Vint.get 2
pop local 3
push argument 0
push local 1
push constant 1
add
push argument 0
push argument 2
call Vint.get 2
call Vint.set 3
pop temp 0
push argument 0
push argument 2
push local 3
call Vint.set 3
pop temp 0
push local 1
push constant 1
add
return
function Sort2.quicksort 1
push argument 1
push argument 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push argument 2
call Sort2.partition 3
pop local 0
push argument 0
push argument 1
push local 0
push constant 1
sub
call Sort2.quicksort 3
pop temp 0
push argument 0
push local 0
push constant 1
add
push argument 2
call Sort2.quicksort 3
pop temp 0
label IF_FALSE0
push constant 0
return

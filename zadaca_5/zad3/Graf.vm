function Graf.functionf 1
push argument 0
push constant 5
add
pop local 0
push local 0
return
function Graf.draw 1
push constant 32
neg
pop local 0
push constant 127
push constant 0
push constant 127
push constant 255
call Screen.drawLine 4
pop temp 0
push constant 0
push constant 127
push constant 255
push constant 127
call Screen.drawLine 4
pop temp 0
label WHILE_EXP0
push local 0
push constant 32
lt
not
if-goto WHILE_END0
push local 0
call Graf.funcint 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Graf.funcint 3
push argument 0
push constant 1
add
pop local 1
push argument 0
call Graf.functionf 1
pop local 0
push local 1
call Graf.functionf 1
pop local 2
push local 0
push constant 33
neg
gt
push local 2
push constant 33
neg
gt
and
push local 0
push constant 33
lt
push local 2
push constant 33
lt
and
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push constant 4
call Math.multiply 2
pop argument 0
push constant 128
push argument 0
add
pop argument 0
push local 0
push constant 4
call Math.multiply 2
pop local 0
push constant 128
push local 0
sub
pop local 0
push local 0
push constant 255
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 255
pop local 0
label IF_FALSE1
push local 1
push constant 4
call Math.multiply 2
pop local 1
push constant 128
push local 1
add
pop local 1
push local 2
push constant 4
call Math.multiply 2
pop local 2
push constant 128
push local 2
sub
pop local 2
push local 2
push constant 255
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 255
pop local 2
label IF_FALSE2
push argument 0
push local 0
push local 1
push local 2
call Screen.drawLine 4
pop temp 0
label IF_FALSE0
push constant 0
return
